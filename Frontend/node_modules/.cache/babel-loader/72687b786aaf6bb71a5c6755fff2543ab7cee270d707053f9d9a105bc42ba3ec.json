{"ast":null,"code":"var _jsxFileName = \"/Users/typham/Documents/GitHub/WebApp_Project_FrontEnd/Frontend/src/components/CrudOperations.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Header from './Header';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CrudOperations() {\n  _s();\n  const [action, setAction] = useState(null);\n  const [product, setProduct] = useState([]);\n  const [currentProduct, setCurrentProduct] = useState({\n    id: '',\n    name: '',\n    price: '',\n    description: '',\n    image_path: ''\n  });\n  useEffect(() => {\n    if (action === 'see') {\n      fetch('/api/products') // Adjust the URL to wherever your API is hosted\n      .then(response => response.json()).then(data => setProduct(data)).catch(error => console.error('Error fetching products:', error));\n    }\n  }, [action]);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setProduct(prevProduct => ({\n      ...prevProduct,\n      [name]: value\n    }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetch('/api/products', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: product.name,\n        price: product.price,\n        description: product.description,\n        image_path: product.image_path // Assuming this is a string containing the URL to the image\n      })\n    }).then(response => response.json()).then(data => {\n      console.log('Product updated:', data);\n      // Here you can update the products list or give feedback to the user\n    }).catch(error => console.error('Error updating product:', error));\n  };\n  const handleUpdateSubmit = async e => {\n    e.preventDefault();\n    fetch('/api/products', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        price: currentProduct.price,\n        description: currentProduct.description,\n        image_path: currentProduct.image_path // Include image_path if you want to allow updates\n      })\n    }).then(response => response.json()).then(data => {\n      console.log('Product updated:', data);\n      // Here you can update the products list or give feedback to the user\n    }).catch(error => console.error('Error updating product:', error));\n  };\n  const renderProductList = () => {\n    return product.map((product, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"ID: \", product.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", product.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Price: \", product.price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Description: \", product.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), product.image_path && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: product.image_path,\n        alt: product.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 32\n      }, this), \" // Display the image if path is available // ... rest of the code ...\"]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this));\n  };\n  const handleDelete = name => {\n    fetch(`/api/products/delete/${name}`, {\n      method: 'DELETE'\n    }).then(response => response.json()).then(data => {\n      console.log('Product deleted:', data);\n      // Here you would filter out the deleted product from the `products` state\n      setProduct(product.filter(product => product.name !== name));\n    }).catch(error => console.error('Error deleting product:', error));\n  };\n  const startEditingProduct = product => {\n    setCurrentProduct(product);\n    setAction('update');\n  };\n\n  // This function is triggered when any of the action buttons are clicked\n  const changeAction = newAction => {\n    setAction(newAction);\n  };\n  const renderBox = () => {\n    switch (action) {\n      case 'insert':\n        return /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"id\",\n            placeholder: \"ID\",\n            value: product.id,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            placeholder: \"Name\",\n            value: product.name,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"price\",\n            placeholder: \"Price\",\n            value: product.price,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"description\",\n            placeholder: \"Description\",\n            value: product.description,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"image\",\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this);\n      case 'see':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Product List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), product.map((product, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"ID: \", product.id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Name: \", product.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Price: \", product.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Description: \", product.description]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setCurrentProduct(product);\n                setAction('update');\n              },\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(product.name),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this);\n      case 'update':\n        return /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleUpdateSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            placeholder: \"Name\",\n            value: currentProduct.name,\n            onChange: handleInputChange,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"price\",\n            placeholder: \"Price\",\n            value: currentProduct.price,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"description\",\n            placeholder: \"Description\",\n            value: currentProduct.description,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Update Product\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this);\n      case 'delete':\n        // You may want to handle delete within the 'see' case by adding delete buttons next to each product\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select a product to delete from the list.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Select an action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => changeAction('insert'),\n      children: \"Insert\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => changeAction('see'),\n      children: \"See\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => changeAction('update'),\n      children: \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => changeAction('delete'),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), renderBox()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n}\n_s(CrudOperations, \"P6Er4Iu2CxLzDeLCxZSPIem/NJk=\");\n_c = CrudOperations;\nexport default CrudOperations;\nvar _c;\n$RefreshReg$(_c, \"CrudOperations\");","map":{"version":3,"names":["React","useState","Header","useEffect","jsxDEV","_jsxDEV","CrudOperations","_s","action","setAction","product","setProduct","currentProduct","setCurrentProduct","id","name","price","description","image_path","fetch","then","response","json","data","catch","error","console","handleInputChange","e","value","target","prevProduct","handleSubmit","preventDefault","method","headers","body","JSON","stringify","log","handleUpdateSubmit","renderProductList","map","index","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","handleDelete","filter","startEditingProduct","changeAction","newAction","renderBox","onSubmit","type","placeholder","onChange","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/typham/Documents/GitHub/WebApp_Project_FrontEnd/Frontend/src/components/CrudOperations.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Header from './Header';\nimport { useEffect } from 'react';\n\n\nfunction CrudOperations() {\n    const [action, setAction] = useState(null);\n    const [product, setProduct] = useState([]);\n    const [currentProduct, setCurrentProduct] = useState({\n    id: '',\n    name: '',\n    price: '',\n    description: '',\n    image_path: '',\n  });\n\n  useEffect(() => {\n    if (action === 'see') {\n      fetch('/api/products') // Adjust the URL to wherever your API is hosted\n        .then(response => response.json())\n        .then(data => setProduct(data))\n        .catch(error => console.error('Error fetching products:', error));\n    }\n  }, [action]);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setProduct(prevProduct => ({ ...prevProduct, [name]: value }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n  \n    fetch('/api/products', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        name: product.name,\n        price: product.price,\n        description: product.description,\n        image_path: product.image_path // Assuming this is a string containing the URL to the image\n      })\n    })\n    .then(response => response.json())\n    .then(data => {\n      console.log('Product updated:', data);\n      // Here you can update the products list or give feedback to the user\n    })\n    .catch(error => console.error('Error updating product:', error));\n  };\n  \n\n  const handleUpdateSubmit = async (e) => {\n    e.preventDefault();\n\n    fetch('/api/products', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        price: currentProduct.price,\n        description: currentProduct.description,\n        image_path: currentProduct.image_path // Include image_path if you want to allow updates\n      })\n    })\n    .then(response => response.json())\n    .then(data => {\n      console.log('Product updated:', data);\n      // Here you can update the products list or give feedback to the user\n    })\n    .catch(error => console.error('Error updating product:', error));\n  };\n\n  const renderProductList = () => {\n    return product.map((product, index) => (\n      <div key={index}>\n        <p>ID: {product.id}</p>\n        <p>Name: {product.name}</p>\n        <p>Price: {product.price}</p>\n        <p>Description: {product.description}</p>\n        {product.image_path && <img src={product.image_path} alt={product.name} />} // Display the image if path is available\n        // ... rest of the code ...\n      </div>\n    ));\n  };\n\n  const handleDelete = (name) => {\n  fetch(`/api/products/delete/${name}`, {\n    method: 'DELETE'\n  })\n  .then(response => response.json())\n  .then(data => {\n    console.log('Product deleted:', data);\n    // Here you would filter out the deleted product from the `products` state\n    setProduct(product.filter(product => product.name !== name));\n  })\n  .catch(error => console.error('Error deleting product:', error));\n};\n\nconst startEditingProduct = (product) => {\n    setCurrentProduct(product);\n    setAction('update');\n  };\n\n// This function is triggered when any of the action buttons are clicked\nconst changeAction = (newAction) => {\n    setAction(newAction);\n  };  \n\n\n  const renderBox = () => {\n    switch (action) {\n      case 'insert':\n        return (\n          <form onSubmit={handleSubmit}>\n            <input\n              type=\"text\"\n              name=\"id\"\n              placeholder=\"ID\"\n              value={product.id}\n              onChange={handleInputChange}\n            />\n            <input\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Name\"\n              value={product.name}\n              onChange={handleInputChange}\n            />\n            <input\n              type=\"text\"\n              name=\"price\"\n              placeholder=\"Price\"\n              value={product.price}\n              onChange={handleInputChange}\n            />\n            <textarea\n              name=\"description\"\n              placeholder=\"Description\"\n              value={product.description}\n              onChange={handleInputChange}\n            />\n            <input\n              type=\"file\"\n              name=\"image\"\n              onChange={handleInputChange}\n            />\n            <button type=\"submit\">Submit</button>\n          </form>\n        );\n  \n      case 'see':\n        return (\n          <div>\n            <h3>Product List</h3>\n            {product.map((product, index) => (\n              <div key={index}>\n                <p>ID: {product.id}</p>\n                <p>Name: {product.name}</p>\n                <p>Price: {product.price}</p>\n                <p>Description: {product.description}</p>\n                <button onClick={() => {\n                  setCurrentProduct(product);\n                  setAction('update');\n                }}>Update</button>\n                <button onClick={() => handleDelete(product.name)}>Delete</button>\n              </div>\n            ))}\n          </div>\n        );\n  \n      case 'update':\n        return (\n          <form onSubmit={handleUpdateSubmit}>\n            <input\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Name\"\n              value={currentProduct.name}\n              onChange={handleInputChange}\n              disabled\n            />\n            <input\n              type=\"text\"\n              name=\"price\"\n              placeholder=\"Price\"\n              value={currentProduct.price}\n              onChange={handleInputChange}\n            />\n            <textarea\n              name=\"description\"\n              placeholder=\"Description\"\n              value={currentProduct.description}\n              onChange={handleInputChange}\n            />\n            <button type=\"submit\">Update Product</button>\n          </form>\n        );\n  \n      case 'delete':\n        // You may want to handle delete within the 'see' case by adding delete buttons next to each product\n        return <p>Select a product to delete from the list.</p>;\n  \n      default:\n        return <div>Select an action</div>;\n    }\n  };\n  \n\n  return (\n    <div>\n      <Header />\n      <button onClick={() => changeAction('insert')}>Insert</button>\n      <button onClick={() => changeAction('see')}>See</button>\n      <button onClick={() => changeAction('update')}>Update</button>\n      <button onClick={() => changeAction('delete')}>Delete</button>\n      {renderBox()}\n    </div>\n  );\n}\n\nexport default CrudOperations;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGlC,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC;IACrDa,EAAE,EAAE,EAAE;IACNC,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,EAAE;IACTC,WAAW,EAAE,EAAE;IACfC,UAAU,EAAE;EACd,CAAC,CAAC;EAEFf,SAAS,CAAC,MAAM;IACd,IAAIK,MAAM,KAAK,KAAK,EAAE;MACpBW,KAAK,CAAC,eAAe,CAAC,CAAC;MAAA,CACpBC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIZ,UAAU,CAACY,IAAI,CAAC,CAAC,CAC9BC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC,CAAC;IACrE;EACF,CAAC,EAAE,CAACjB,MAAM,CAAC,CAAC;EAEZ,MAAMmB,iBAAiB,GAAIC,CAAC,IAAK;IAC/B,MAAM;MAAEb,IAAI;MAAEc;IAAM,CAAC,GAAGD,CAAC,CAACE,MAAM;IAChCnB,UAAU,CAACoB,WAAW,KAAK;MAAE,GAAGA,WAAW;MAAE,CAAChB,IAAI,GAAGc;IAAM,CAAC,CAAC,CAAC;EAChE,CAAC;EAED,MAAMG,YAAY,GAAIJ,CAAC,IAAK;IAC1BA,CAAC,CAACK,cAAc,CAAC,CAAC;IAElBd,KAAK,CAAC,eAAe,EAAE;MACrBe,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBvB,IAAI,EAAEL,OAAO,CAACK,IAAI;QAClBC,KAAK,EAAEN,OAAO,CAACM,KAAK;QACpBC,WAAW,EAAEP,OAAO,CAACO,WAAW;QAChCC,UAAU,EAAER,OAAO,CAACQ,UAAU,CAAC;MACjC,CAAC;IACH,CAAC,CAAC,CACDE,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZG,OAAO,CAACa,GAAG,CAAC,kBAAkB,EAAEhB,IAAI,CAAC;MACrC;IACF,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC,CAAC;EAClE,CAAC;EAGD,MAAMe,kBAAkB,GAAG,MAAOZ,CAAC,IAAK;IACtCA,CAAC,CAACK,cAAc,CAAC,CAAC;IAElBd,KAAK,CAAC,eAAe,EAAE;MACrBe,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBtB,KAAK,EAAEJ,cAAc,CAACI,KAAK;QAC3BC,WAAW,EAAEL,cAAc,CAACK,WAAW;QACvCC,UAAU,EAAEN,cAAc,CAACM,UAAU,CAAC;MACxC,CAAC;IACH,CAAC,CAAC,CACDE,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZG,OAAO,CAACa,GAAG,CAAC,kBAAkB,EAAEhB,IAAI,CAAC;MACrC;IACF,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC,CAAC;EAClE,CAAC;EAED,MAAMgB,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,OAAO/B,OAAO,CAACgC,GAAG,CAAC,CAAChC,OAAO,EAAEiC,KAAK,kBAChCtC,OAAA;MAAAuC,QAAA,gBACEvC,OAAA;QAAAuC,QAAA,GAAG,MAAI,EAAClC,OAAO,CAACI,EAAE;MAAA;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvB3C,OAAA;QAAAuC,QAAA,GAAG,QAAM,EAAClC,OAAO,CAACK,IAAI;MAAA;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3B3C,OAAA;QAAAuC,QAAA,GAAG,SAAO,EAAClC,OAAO,CAACM,KAAK;MAAA;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7B3C,OAAA;QAAAuC,QAAA,GAAG,eAAa,EAAClC,OAAO,CAACO,WAAW;MAAA;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACxCtC,OAAO,CAACQ,UAAU,iBAAIb,OAAA;QAAK4C,GAAG,EAAEvC,OAAO,CAACQ,UAAW;QAACgC,GAAG,EAAExC,OAAO,CAACK;MAAK;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAAC,wEAE7E;IAAA,GAPUL,KAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOV,CACN,CAAC;EACJ,CAAC;EAED,MAAMG,YAAY,GAAIpC,IAAI,IAAK;IAC/BI,KAAK,CAAE,wBAAuBJ,IAAK,EAAC,EAAE;MACpCmB,MAAM,EAAE;IACV,CAAC,CAAC,CACDd,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZG,OAAO,CAACa,GAAG,CAAC,kBAAkB,EAAEhB,IAAI,CAAC;MACrC;MACAZ,UAAU,CAACD,OAAO,CAAC0C,MAAM,CAAC1C,OAAO,IAAIA,OAAO,CAACK,IAAI,KAAKA,IAAI,CAAC,CAAC;IAC9D,CAAC,CAAC,CACDS,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC,CAAC;EAClE,CAAC;EAED,MAAM4B,mBAAmB,GAAI3C,OAAO,IAAK;IACrCG,iBAAiB,CAACH,OAAO,CAAC;IAC1BD,SAAS,CAAC,QAAQ,CAAC;EACrB,CAAC;;EAEH;EACA,MAAM6C,YAAY,GAAIC,SAAS,IAAK;IAChC9C,SAAS,CAAC8C,SAAS,CAAC;EACtB,CAAC;EAGD,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACtB,QAAQhD,MAAM;MACZ,KAAK,QAAQ;QACX,oBACEH,OAAA;UAAMoD,QAAQ,EAAEzB,YAAa;UAAAY,QAAA,gBAC3BvC,OAAA;YACEqD,IAAI,EAAC,MAAM;YACX3C,IAAI,EAAC,IAAI;YACT4C,WAAW,EAAC,IAAI;YAChB9B,KAAK,EAAEnB,OAAO,CAACI,EAAG;YAClB8C,QAAQ,EAAEjC;UAAkB;YAAAkB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B,CAAC,eACF3C,OAAA;YACEqD,IAAI,EAAC,MAAM;YACX3C,IAAI,EAAC,MAAM;YACX4C,WAAW,EAAC,MAAM;YAClB9B,KAAK,EAAEnB,OAAO,CAACK,IAAK;YACpB6C,QAAQ,EAAEjC;UAAkB;YAAAkB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B,CAAC,eACF3C,OAAA;YACEqD,IAAI,EAAC,MAAM;YACX3C,IAAI,EAAC,OAAO;YACZ4C,WAAW,EAAC,OAAO;YACnB9B,KAAK,EAAEnB,OAAO,CAACM,KAAM;YACrB4C,QAAQ,EAAEjC;UAAkB;YAAAkB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B,CAAC,eACF3C,OAAA;YACEU,IAAI,EAAC,aAAa;YAClB4C,WAAW,EAAC,aAAa;YACzB9B,KAAK,EAAEnB,OAAO,CAACO,WAAY;YAC3B2C,QAAQ,EAAEjC;UAAkB;YAAAkB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B,CAAC,eACF3C,OAAA;YACEqD,IAAI,EAAC,MAAM;YACX3C,IAAI,EAAC,OAAO;YACZ6C,QAAQ,EAAEjC;UAAkB;YAAAkB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B,CAAC,eACF3C,OAAA;YAAQqD,IAAI,EAAC,QAAQ;YAAAd,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjC,CAAC;MAGX,KAAK,KAAK;QACR,oBACE3C,OAAA;UAAAuC,QAAA,gBACEvC,OAAA;YAAAuC,QAAA,EAAI;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EACpBtC,OAAO,CAACgC,GAAG,CAAC,CAAChC,OAAO,EAAEiC,KAAK,kBAC1BtC,OAAA;YAAAuC,QAAA,gBACEvC,OAAA;cAAAuC,QAAA,GAAG,MAAI,EAAClC,OAAO,CAACI,EAAE;YAAA;cAAA+B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACvB3C,OAAA;cAAAuC,QAAA,GAAG,QAAM,EAAClC,OAAO,CAACK,IAAI;YAAA;cAAA8B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC3B3C,OAAA;cAAAuC,QAAA,GAAG,SAAO,EAAClC,OAAO,CAACM,KAAK;YAAA;cAAA6B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC7B3C,OAAA;cAAAuC,QAAA,GAAG,eAAa,EAAClC,OAAO,CAACO,WAAW;YAAA;cAAA4B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACzC3C,OAAA;cAAQwD,OAAO,EAAEA,CAAA,KAAM;gBACrBhD,iBAAiB,CAACH,OAAO,CAAC;gBAC1BD,SAAS,CAAC,QAAQ,CAAC;cACrB,CAAE;cAAAmC,QAAA,EAAC;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAClB3C,OAAA;cAAQwD,OAAO,EAAEA,CAAA,KAAMV,YAAY,CAACzC,OAAO,CAACK,IAAI,CAAE;cAAA6B,QAAA,EAAC;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA,GAT1DL,KAAK;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAUV,CACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAGV,KAAK,QAAQ;QACX,oBACE3C,OAAA;UAAMoD,QAAQ,EAAEjB,kBAAmB;UAAAI,QAAA,gBACjCvC,OAAA;YACEqD,IAAI,EAAC,MAAM;YACX3C,IAAI,EAAC,MAAM;YACX4C,WAAW,EAAC,MAAM;YAClB9B,KAAK,EAAEjB,cAAc,CAACG,IAAK;YAC3B6C,QAAQ,EAAEjC,iBAAkB;YAC5BmC,QAAQ;UAAA;YAAAjB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC,eACF3C,OAAA;YACEqD,IAAI,EAAC,MAAM;YACX3C,IAAI,EAAC,OAAO;YACZ4C,WAAW,EAAC,OAAO;YACnB9B,KAAK,EAAEjB,cAAc,CAACI,KAAM;YAC5B4C,QAAQ,EAAEjC;UAAkB;YAAAkB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B,CAAC,eACF3C,OAAA;YACEU,IAAI,EAAC,aAAa;YAClB4C,WAAW,EAAC,aAAa;YACzB9B,KAAK,EAAEjB,cAAc,CAACK,WAAY;YAClC2C,QAAQ,EAAEjC;UAAkB;YAAAkB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B,CAAC,eACF3C,OAAA;YAAQqD,IAAI,EAAC,QAAQ;YAAAd,QAAA,EAAC;UAAc;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzC,CAAC;MAGX,KAAK,QAAQ;QACX;QACA,oBAAO3C,OAAA;UAAAuC,QAAA,EAAG;QAAyC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAEzD;QACE,oBAAO3C,OAAA;UAAAuC,QAAA,EAAK;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;IACtC;EACF,CAAC;EAGD,oBACE3C,OAAA;IAAAuC,QAAA,gBACEvC,OAAA,CAACH,MAAM;MAAA2C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACV3C,OAAA;MAAQwD,OAAO,EAAEA,CAAA,KAAMP,YAAY,CAAC,QAAQ,CAAE;MAAAV,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC9D3C,OAAA;MAAQwD,OAAO,EAAEA,CAAA,KAAMP,YAAY,CAAC,KAAK,CAAE;MAAAV,QAAA,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACxD3C,OAAA;MAAQwD,OAAO,EAAEA,CAAA,KAAMP,YAAY,CAAC,QAAQ,CAAE;MAAAV,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC9D3C,OAAA;MAAQwD,OAAO,EAAEA,CAAA,KAAMP,YAAY,CAAC,QAAQ,CAAE;MAAAV,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC7DQ,SAAS,CAAC,CAAC;EAAA;IAAAX,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEV;AAACzC,EAAA,CAzNQD,cAAc;AAAAyD,EAAA,GAAdzD,cAAc;AA2NvB,eAAeA,cAAc;AAAC,IAAAyD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}