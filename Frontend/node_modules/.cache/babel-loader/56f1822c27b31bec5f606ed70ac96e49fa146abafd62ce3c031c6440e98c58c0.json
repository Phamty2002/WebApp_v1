{"ast":null,"code":"var _jsxFileName = \"/Users/typham/Documents/GitHub/WebApp_Project_FrontEnd/Frontend/src/components/MangeProduct.js\",\n  _s = $RefreshSig$();\n// components/ProductForm.js\n\nimport { useParams } from 'react-router-dom';\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProductForm() {\n  _s();\n  let {\n    action\n  } = useParams();\n\n  // You will create form components or render logic based on the action\n  // For example, if action === 'insert', you'll render a form to insert a product\n  // You'll need to handle form submission and API calls using axios\n\n  // Form validation schema\n  const ProductSchema = Yup.object().shape({\n    name: Yup.string().required('Required'),\n    price: Yup.number().required('Required'),\n    description: Yup.string().required('Required')\n    // You'll need to handle image file upload as well, which is not covered here\n  });\n\n  // Form submission handler\n  const handleFormSubmit = values => {\n    // Use axios to send a request to your API based on the action\n    // For example, if action === 'insert', you'll send a POST request to create a product\n  };\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      name: '',\n      price: '',\n      description: ''\n    },\n    validationSchema: ProductSchema,\n    onSubmit: handleFormSubmit,\n    children: ({\n      errors,\n      touched\n    }) => /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        name: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), errors.name && touched.name ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: errors.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 43\n      }, this) : null, /*#__PURE__*/_jsxDEV(Field, {\n        name: \"price\",\n        type: \"number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), errors.price && touched.price ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: errors.price\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 45\n      }, this) : null, /*#__PURE__*/_jsxDEV(Field, {\n        name: \"description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), errors.description && touched.description ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: errors.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 57\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(ProductForm, \"1+U/reKVj3aenaJmC6WRy8Z/3NU=\", false, function () {\n  return [useParams];\n});\n_c = ProductForm;\nexport default ProductForm;\nvar _c;\n$RefreshReg$(_c, \"ProductForm\");","map":{"version":3,"names":["useParams","Formik","Form","Field","Yup","jsxDEV","_jsxDEV","ProductForm","_s","action","ProductSchema","object","shape","name","string","required","price","number","description","handleFormSubmit","values","initialValues","validationSchema","onSubmit","children","errors","touched","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["/Users/typham/Documents/GitHub/WebApp_Project_FrontEnd/Frontend/src/components/MangeProduct.js"],"sourcesContent":["// components/ProductForm.js\n\nimport { useParams } from 'react-router-dom';\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\n\nfunction ProductForm() {\n  let { action } = useParams();\n\n  // You will create form components or render logic based on the action\n  // For example, if action === 'insert', you'll render a form to insert a product\n  // You'll need to handle form submission and API calls using axios\n  \n  // Form validation schema\n  const ProductSchema = Yup.object().shape({\n    name: Yup.string().required('Required'),\n    price: Yup.number().required('Required'),\n    description: Yup.string().required('Required'),\n    // You'll need to handle image file upload as well, which is not covered here\n  });\n\n  // Form submission handler\n  const handleFormSubmit = (values) => {\n    // Use axios to send a request to your API based on the action\n    // For example, if action === 'insert', you'll send a POST request to create a product\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        price: '',\n        description: '',\n      }}\n      validationSchema={ProductSchema}\n      onSubmit={handleFormSubmit}\n    >\n      {({ errors, touched }) => (\n        <Form>\n          <Field name=\"name\" />\n          {errors.name && touched.name ? (<div>{errors.name}</div>) : null}\n\n          <Field name=\"price\" type=\"number\" />\n          {errors.price && touched.price ? (<div>{errors.price}</div>) : null}\n\n          <Field name=\"description\" />\n          {errors.description && touched.description ? (<div>{errors.description}</div>) : null}\n\n          <button type=\"submit\">Submit</button>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nexport default ProductForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}