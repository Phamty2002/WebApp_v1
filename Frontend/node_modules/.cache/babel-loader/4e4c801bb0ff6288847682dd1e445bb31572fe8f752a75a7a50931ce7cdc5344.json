{"ast":null,"code":"var _jsxFileName = \"/Users/typham/Documents/GitHub/WebApp_Project_FrontEnd/Frontend/src/components/ProductList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport ProductItem from '../components/ProductItem';\nimport ProductForm from '../components/ProductForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductList = () => {\n  _s();\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    fetchProducts();\n  }, []);\n  const fetchProducts = async () => {\n    try {\n      const {\n        data\n      } = await axios.get('/api/products');\n      setProducts(data);\n    } catch (error) {\n      console.error('Error fetching products:', error);\n    }\n  };\n\n  // Method to add a new product\n  const addProduct = async newProduct => {\n    try {\n      const response = await axios.post('/api/products', newProduct);\n      setProducts([...products, response.data]); // Add the new product to the list\n    } catch (error) {\n      console.error('Error adding product:', error);\n    }\n  };\n\n  // Method to fetch a single product\n  const viewProduct = async id => {\n    try {\n      const response = await axios.get(`/api/products/${id}`);\n      console.log(response.data); // Do something with the product data, like showing it in a modal or a detailed view\n    } catch (error) {\n      console.error('Error fetching the product:', error);\n    }\n  };\n\n  // Method to update a product by name\n  constProduct = async (productName, updatedData) => {\n    try {\n      const response = await axios.put(`/api/products/${productName}`, updatedData);\n      // Find the index of the product that was updated\n      const index = products.findIndex(product => product.name === productName);\n      // Update the product in the state\n      const updatedProducts = [...products];\n      updatedProducts[index] = {\n        ...updatedProducts[index],\n        ...response.data\n      };\n      setProducts(updatedProducts);\n    } catch (error) {\n      console.error('Error updating the product:', error);\n    }\n  };\n\n  // Method to delete a product by name\n  const deleteProduct = async productName => {\n    try {\n      await axios.delete(`/api/products/${productName}`);\n      setProducts(products.filter(product => product.name !== productName)); // Update the state to remove the product\n    } catch (error) {\n      console.error('Error deleting the product:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ProductForm, {\n      setProducts: addProduct\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }, this), products.map(product => /*#__PURE__*/_jsxDEV(ProductItem, {\n      product: product,\n      setProducts: setProducts,\n      viewProduct: viewProduct // Pass editProduct to ProductItem\n      ,\n      editProduct: editProduct // Pass editProduct to ProductItem\n      ,\n      deleteProduct: deleteProduct // Pass deleteProduct to ProductItem\n    }, product.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 3\n  }, this);\n};\n_s(ProductList, \"f86L6rLANGURv6GE6gupp7+oOp4=\");\n_c = ProductList;\nexport default ProductList;\nvar _c;\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"names":["React","useEffect","useState","axios","ProductItem","ProductForm","jsxDEV","_jsxDEV","ProductList","_s","products","setProducts","fetchProducts","data","get","error","console","addProduct","newProduct","response","post","viewProduct","id","log","constProduct","productName","updatedData","put","index","findIndex","product","name","updatedProducts","deleteProduct","delete","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","map","editProduct","_c","$RefreshReg$"],"sources":["/Users/typham/Documents/GitHub/WebApp_Project_FrontEnd/Frontend/src/components/ProductList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport ProductItem from '../components/ProductItem';\nimport ProductForm from '../components/ProductForm';\n\nconst ProductList = () => {\n  const [products, setProducts] = useState([]);\n\n  useEffect(() => {\n    fetchProducts();\n  }, []);\n\n  const fetchProducts = async () => {\n    try {\n      const { data } = await axios.get('/api/products');\n      setProducts(data);\n    } catch (error) {\n      console.error('Error fetching products:', error);\n    }\n  };\n\n  // Method to add a new product\n  const addProduct = async (newProduct) => {\n    try {\n      const response = await axios.post('/api/products', newProduct);\n      setProducts([...products, response.data]); // Add the new product to the list\n    } catch (error) {\n      console.error('Error adding product:', error);\n    }\n  };\n\n  // Method to fetch a single product\nconst viewProduct = async (id) => {\n  try {\n    const response = await axios.get(`/api/products/${id}`);\n    console.log(response.data); // Do something with the product data, like showing it in a modal or a detailed view\n  } catch (error) {\n    console.error('Error fetching the product:', error);\n  }\n};\n\n// Method to update a product by name\nconstProduct = async (productName, updatedData) => {\n  try {\n    const response = await axios.put(`/api/products/${productName}`, updatedData);\n    // Find the index of the product that was updated\n    const index = products.findIndex((product) => product.name === productName);\n    // Update the product in the state\n    const updatedProducts = [...products];\n    updatedProducts[index] = { ...updatedProducts[index], ...response.data };\n    setProducts(updatedProducts);\n  } catch (error) {\n    console.error('Error updating the product:', error);\n  }\n};\n\n// Method to delete a product by name\nconst deleteProduct = async (productName) => {\n  try {\n    await axios.delete(`/api/products/${productName}`);\n    setProducts(products.filter((product) => product.name !== productName)); // Update the state to remove the product\n  } catch (error) {\n    console.error('Error deleting the product:', error);\n  }\n};\n\nreturn (\n  <div>\n    <ProductForm setProducts={addProduct} />\n    {products.map((product) => (\n      <ProductItem \n        key={product.id} \n        product={product} \n        setProducts={setProducts} \n        viewProduct={viewProduct} // Pass editProduct to ProductItem\n        editProduct={editProduct} // Pass editProduct to ProductItem\n        deleteProduct={deleteProduct} // Pass deleteProduct to ProductItem\n      />\n    ))}\n  </div>\n);\n};\n\nexport default ProductList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}